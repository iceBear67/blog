{"pages":[{"title":"Lnks","text":"本博客名称： 非标准输出 HikariLan’s Blog贺兰星辰的博客 一实无言伏太的博客 一叶知秋 - 秋是悲欢离合，雨是一生错过 秋雨落的博客 LxNetLxns的博客LxnsNB czm的博客 - 记想记的东西 EvanLuo42’s Blog","link":"links/index.html"},{"title":"关于 nstd::out","text":"Non-STandard Output 是 iceBear 的破事水博客。你可以在这里了解到 iceBear","link":"about/index.html"},{"title":"空调房","text":"我们在此处安装了空调，您可以在此自由休憩。","link":"%E7%A9%BA%E8%B0%83%E6%88%BF/index.html"}],"posts":[{"title":"Hello World","text":"你好, Hexo！折腾了一个晚上，我终于还是回到 Hexo 的怀抱了。接下来会陆陆续续更新一些杂文，并且把我在 Lxnet 发布的那几篇文章搬一下，欢迎 Watch/订阅 我的博客。","link":"2021/03/12/hello-world/"},{"title":"使用 cproxy 对程序进行透明代理","text":"在 Windows 下，说到 透明代理 ，你可能会想到 Proxifier , SSTap, Mellow但在 Linux 下，你可能会想到 proxychains 然后再想到 proxychains 不能代理 static-linked 的程序。 为什么 ProxyChains(NG) 不能代理静态连接的程序ProxyChains NG 通过一个预加载的共享库来hook到网络相关的函数(比如: connect,getaddrinfo)上，接着他就可以转发这些流量。缺点似乎显而易见，如果只是通过 LD_PRELOAD 来进行透明代理，那么这招对于静态连接的程序是无用的（比如说 Go 程序..)其次，ProxyChains 只支持 TCP，这可能导致无法转发 DNS 流量 -&gt; DNS 流量泄漏。 cproxy 是什么cproxy 也是透明代理，作用和 proxychains 类似。原理上与 proxychains 不同，它使用 cgroup 进行对程序的代理 ，不过配置起来还有点麻烦本文将会教您在您的Linux PC上使用 cproxy，截至本文发布之前，cproxy似乎只支持 Linux。 下载 cproxy官方推荐的方法是: 直接用 cargo 1cargo install cproxy 如果没有 cargo 可以在 Release 上下载压缩包。解压压缩包，可能会发现有两个可执行文件，不过似乎只留一个就好了。 安装 cproxy先来试一试 cproxy！ 1cproxy --port &lt;本地代理端口&gt; -- curl ip.sb ( ｀д′) 失败了如果你和我一样，在port上写了 socks5 的代理端口，那么你就被坑了。笔者填入 geph 的 HTTP 代理端口时是可以成功的，但是使用 v2ray 的s5/http端口都无法使用。这是因为 cproxy 需要修改 v2ray 的配置进行兼容，如果你不想去改配置 在确保可以使用 cproxy 后，我们来配置 alias。将以下内容写到 ~/.bashrc，记得自己修改一些部分。 alias &quot;px&quot;=&quot;/path/to/cproxy --port &lt;your-local-proxy-port&gt; --&quot; 例如我的配置： alias &quot;px&quot;=&quot;/bin/cproxy --port 60080 --use-tproxy -- &quot; # 60080 是ipt2socks的默认监听端口。 保存后，使用 source ~/.bashrc 载入，试试 px curl ip.sb，看看是否成功。 缺陷每次使用都要 sudo ，还是挺烦人的吧…对于这种情况，也可以考虑使用有后台常驻的 cgproxy，但本文不做介绍，有兴趣可以自己了解。","link":"2021/03/13/%E4%BD%BF%E7%94%A8-cproxy-%E5%AF%B9%E7%A8%8B%E5%BA%8F%E8%BF%9B%E8%A1%8C%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"},{"title":"修复 Intellij IDEA 无法使用中文输入法","text":"踩坑记录 TL;DR系统: ArchLinux一切的大前提: 环境变量设置正确(GTK_IM_MODULE…) ibus 用户可以试试迁移到 fcitx fcitx 如果不行可能得自己编译一个 patched 的 JetBrains Runtime 开始IDEA 没法输入中文的问题其实在我系统上盘踞很久了，一会能用一会不能的….所以我打算动手整顿他 设置环境变量学着 ArchLinux Wiki，我首先往 ~/.pam_environment 加了这些东西: 123GTK_IM_MODULE DEFAULT=ibusQT_IM_MODULE DEFAULT=ibusXMODIFIERS DEFAULT=\\@im=ibus 然而并没有什么效果… 加到 idea.sh 头上也不行，qtconfig-qt4 也改过了，没啥效果 修改键盘布局压根没变化 更换输入法于是我尝试更换到 fcitx （更换到 fcitx 之后似乎已经可以在 idea 窗口里面召唤出 fcitx 了，但是好像还是输入不了中文 自己编译在 archlinuxcn 论坛上找到了一个回复: 其实解决这个问题的过程还挺曲折的，我不打算直接给出顺利的解决方案，所以建议先看完，再动手操作，否则会踩老坑，以下是折腾记录：问题：fcitx搜狗输入法在idea环境中文输入不跟随光标解决方案参考链接： https://blog.csdn.net/u011166277/articl … /106287587辛酸史：先下载JetBrainsRuntime源码，https://github.com/JetBrains/JetBrainsRuntime因为github很慢，所以到https://gitee.com/上导入github进行下载，还有两种下载方式，教程都在https://zhuanlan.zhihu.com/p/121015450代下载网站https://shrill-pond-3e81.hunsh.workers.dev/ http://g.widyun.com/ 网速慢的话容易过期下载完JetBrainsRuntime之后下载idea.patch https://github.com/prehonor/myJetBrainsRuntime然后把idea.patch拷贝到JetBrainsRuntime根目录git checkout cfc3e87f2ac27a0b8c78c729c113aa52535feff6 （这一步经过测试，并不需要，用最新的就好）git apply idea.patch然后根据官方教程编译就行了，但是，别信官方的，经过测试docker打包出现未知错误，还不知道咋查，ubuntu版本低了还不行，一会儿404，一会儿缺jdk11，拖过来一个jdk11又说glibc版本不够，安装glibc直接整个系统挂了，所有命令都不能用了，所以还是开个虚拟机，直接上ubuntu20吧，然后按照官方的教程编译$ sudo apt-get install autoconf make build-essential libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libxrandr-dev libcups2-dev libfontconfig1-dev libasound2-dev$ cd JetBrainsRuntime$ sh ./configure –disable-warnings-as-errors$ make images你以为这就完了吗？中途会直接出现killed错误，所以，内存至少2G，swap单开一个3G的$ dd if=/dev/zero of=swapfile bs=1024 count=310241024$ sudo mkswap swapfile$ sudo swapon swapfile$ free -h然后照常make images，编译完了之后，会生成jdk，从虚拟机中拷贝出来sudo scp -o PasswordAuthentication=yes -r 用户名@虚拟机ip:/home/用户名/JetBrainsRuntime/build/linux-x86_64-normal-server-release/images/jdk /usr/lib/jvm/java-11.0.7-jetbrains如果你以为按照教程里export IDEA_JDK=/usr/lib/jvm/java-11.0.7-jetbrains 就可以启动，那就又错了，还会报错/usr/lib/jvm/java-11.0.7-jetbrains/bin/java: symbol lookup error: /usr/lib/jvm/java-11.0.7-jetbrains/lib/libnio.so: undefined symbol: initInetAddressIDs你以为只要ldd 看到libjvm.so =&gt; not found就应该把/usr/lib/jvm/java-11.0.7-jetbrains/lib/server/libjvm.so 加到环境变量就行了？不，亲自试验过了，没用，对比了一下正常启动的idea，发现libnet.so路径不对，正常要取jdk里的，于是又加入环境变量，这回启动两次居然直接crash了最后，经过一系列折腾，搞出一个最佳解决办法，修改启动文件$ sudo vim /opt/intellij-idea-ultimate-edition/bin/idea.sh在开头加上export LD_LIBRARY_PATH=/usr/lib/jvm/java-11.0.7-jetbrains/lib:$LD_LIBRARY_PATH &amp;&amp; export IDEA_JDK=/usr/lib/jvm/java-11.0.7-jetbrain这回终于能启动成功了，编译好的jdk最好保存一下，别再这么折腾了 实际操作 ( px 是透明代理 )： 1234567px git clone https://github.com/JetBrains/JetBrainsRuntimecd JetBrainsRuntimepx wget https://raw.githubusercontent.com/prehonor/myJetBrainsRuntime/master/idea.patchgit apply ./idea.patchsh ./configure --disable-warnings-as-errorsmake images #其实这一步内存足够就不会出问题，不一定需要开swap什么的 编译使用的是liberica-11-openjdksudo mv ./build/linux-&lt;tab&gt;/images/jdk /usr/lib/jvm/jetbrains-11-openjdk 然后打开 IDEA，安装 Choose Runtime 插件添加自定义jdk，使用你刚编译的jetbrains runtime启动即可。（笔者机器上无报错）此处提供版本 jb11_0_11-b1504.12 的构建修改版（x86_64）: 下载","link":"2021/07/18/Idea/"}],"tags":[{"name":"tech,linux","slug":"tech-linux","link":"tags/tech-linux/"},{"name":"idea,fcitx,ibus","slug":"idea-fcitx-ibus","link":"tags/idea-fcitx-ibus/"}],"categories":[]}