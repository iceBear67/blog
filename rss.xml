<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>nstd::out</title>
        <link>https://nstd.sfclub.cc</link>
        <description>iceBear 的博客</description>
        <language>zh-CN</language>
        <pubDate>Sun, 18 Jul 2021 13:51:17 +0800</pubDate>
        <lastBuildDate>Sun, 18 Jul 2021 13:51:17 +0800</lastBuildDate>
        <category>tech,linux</category>
        <category>idea,fcitx,ibus</category>
        <item>
            <guid isPermalink="true">https://nstd.sfclub.cc/2021/07/18/Idea/</guid>
            <title>修复 Intellij IDEA 无法使用中文输入法</title>
            <link>https://nstd.sfclub.cc/2021/07/18/Idea/</link>
            <category>idea,fcitx,ibus</category>
            <pubDate>Sun, 18 Jul 2021 13:51:17 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;踩坑记录  &lt;/p&gt;
&lt;h1 id=&#34;TL-DR&#34;&gt;&lt;a href=&#34;#TL-DR&#34; class=&#34;headerlink&#34; title=&#34;TL;DR&#34;&gt;&lt;/a&gt;TL;DR&lt;/h1&gt;&lt;p&gt;系统: ArchLinux&lt;br&gt;一切的大前提: 环境变量设置正确(GTK_IM_MODULE…)  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ibus 用户可以试试迁移到 fcitx&lt;/li&gt;
&lt;li&gt;fcitx 如果不行可能得自己编译一个 patched 的 JetBrains Runtime&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a href=&#34;#开始&#34; class=&#34;headerlink&#34; title=&#34;开始&#34;&gt;&lt;/a&gt;开始&lt;/h1&gt;IDEA 没法输入中文的问题其实在我系统上盘踞很久了，一会能用一会不能的….所以我打算动手整顿他&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;设置环境变量&#34;&gt;&lt;a href=&#34;#设置环境变量&#34; class=&#34;headerlink&#34; title=&#34;设置环境变量&#34;&gt;&lt;/a&gt;设置环境变量&lt;/h1&gt;&lt;p&gt;学着 ArchLinux Wiki，我首先往 &lt;code&gt;~/.pam_environment&lt;/code&gt; 加了这些东西:  &lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GTK_IM_MODULE DEFAULT&amp;#x3D;ibus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;QT_IM_MODULE DEFAULT&amp;#x3D;ibus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XMODIFIERS DEFAULT&amp;#x3D;\@im&amp;#x3D;ibus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而并没有什么效果… 加到 &lt;code&gt;idea.sh&lt;/code&gt; 头上也不行，&lt;code&gt;qtconfig-qt4&lt;/code&gt; 也改过了，没啥效果&lt;/p&gt;
&lt;h1 id=&#34;修改键盘布局&#34;&gt;&lt;a href=&#34;#修改键盘布局&#34; class=&#34;headerlink&#34; title=&#34;修改键盘布局&#34;&gt;&lt;/a&gt;修改键盘布局&lt;/h1&gt;&lt;p&gt;&lt;del&gt;压根没变化&lt;/del&gt;&lt;/p&gt;
&lt;h1 id=&#34;更换输入法&#34;&gt;&lt;a href=&#34;#更换输入法&#34; class=&#34;headerlink&#34; title=&#34;更换输入法&#34;&gt;&lt;/a&gt;更换输入法&lt;/h1&gt;&lt;p&gt;于是我尝试更换到 fcitx （&lt;br&gt;更换到 fcitx 之后似乎已经可以在 idea 窗口里面召唤出 fcitx 了，但是好像还是输入不了中文  &lt;/p&gt;
&lt;h1 id=&#34;自己编译&#34;&gt;&lt;a href=&#34;#自己编译&#34; class=&#34;headerlink&#34; title=&#34;自己编译&#34;&gt;&lt;/a&gt;自己编译&lt;/h1&gt;&lt;p&gt;在 archlinuxcn 论坛上找到了一个回复:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实解决这个问题的过程还挺曲折的，我不打算直接给出顺利的解决方案，所以建议先看完，再动手操作，否则会踩老坑，以下是折腾记录：&lt;br&gt;问题：fcitx搜狗输入法在idea环境中文输入不跟随光标&lt;br&gt;解决方案参考链接： &lt;a href=&#34;https://blog.csdn.net/u011166277/articl&#34;&gt;https://blog.csdn.net/u011166277/articl&lt;/a&gt; … /106287587&lt;br&gt;辛酸史：&lt;br&gt;先下载JetBrainsRuntime源码，&lt;a href=&#34;https://github.com/JetBrains/JetBrainsRuntime&#34;&gt;https://github.com/JetBrains/JetBrainsRuntime&lt;/a&gt;&lt;br&gt;因为github很慢，所以到&lt;a href=&#34;https://gitee.com/%E4%B8%8A%E5%AF%BC%E5%85%A5github%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%EF%BC%8C%E8%BF%98%E6%9C%89%E4%B8%A4%E7%A7%8D%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%95%99%E7%A8%8B%E9%83%BD%E5%9C%A8https://zhuanlan.zhihu.com/p/121015450&#34;&gt;https://gitee.com/上导入github进行下载，还有两种下载方式，教程都在https://zhuanlan.zhihu.com/p/121015450&lt;/a&gt;&lt;br&gt;代下载网站&lt;a href=&#34;https://shrill-pond-3e81.hunsh.workers.dev/&#34;&gt;https://shrill-pond-3e81.hunsh.workers.dev/&lt;/a&gt;       &lt;a href=&#34;http://g.widyun.com/&#34;&gt;http://g.widyun.com/&lt;/a&gt;    网速慢的话容易过期&lt;br&gt;下载完JetBrainsRuntime之后下载idea.patch  &lt;a href=&#34;https://github.com/prehonor/myJetBrainsRuntime&#34;&gt;https://github.com/prehonor/myJetBrainsRuntime&lt;/a&gt;&lt;br&gt;然后把idea.patch拷贝到JetBrainsRuntime根目录&lt;br&gt;git checkout cfc3e87f2ac27a0b8c78c729c113aa52535feff6  （这一步经过测试，并不需要，用最新的就好）&lt;br&gt;git apply idea.patch&lt;br&gt;然后根据官方教程编译就行了，但是，别信官方的，经过测试docker打包出现未知错误，还不知道咋查，ubuntu版本低了还不行，一会儿404，一会儿缺jdk11，拖过来一个jdk11又说glibc版本不够，安装glibc直接整个系统挂了，所有命令都不能用了，所以还是开个虚拟机，直接上ubuntu20吧，然后按照官方的教程编译&lt;br&gt;$ sudo apt-get install autoconf make build-essential libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libxrandr-dev libcups2-dev libfontconfig1-dev libasound2-dev&lt;br&gt;$ cd JetBrainsRuntime&lt;br&gt;$ sh ./configure –disable-warnings-as-errors&lt;br&gt;$ make images&lt;br&gt;你以为这就完了吗？中途会直接出现killed错误，所以，内存至少2G，swap单开一个3G的&lt;br&gt;$ dd if=/dev/zero of=swapfile bs=1024 count=3&lt;em&gt;1024&lt;/em&gt;1024&lt;br&gt;$ sudo mkswap swapfile&lt;br&gt;$ sudo swapon swapfile&lt;br&gt;$ free -h&lt;br&gt;然后照常make images，编译完了之后，会生成jdk，从虚拟机中拷贝出来&lt;br&gt;sudo scp -o PasswordAuthentication=yes -r 用户名@虚拟机ip:/home/用户名/JetBrainsRuntime/build/linux-x86_64-normal-server-release/images/jdk  /usr/lib/jvm/java-11.0.7-jetbrains&lt;br&gt;如果你以为按照教程里export IDEA_JDK=/usr/lib/jvm/java-11.0.7-jetbrains 就可以启动，那就又错了，还会报错&lt;br&gt;/usr/lib/jvm/java-11.0.7-jetbrains/bin/java: symbol lookup error: /usr/lib/jvm/java-11.0.7-jetbrains/lib/libnio.so: undefined symbol: initInetAddressIDs&lt;br&gt;你以为只要ldd 看到libjvm.so =&amp;gt; not found就应该把/usr/lib/jvm/java-11.0.7-jetbrains/lib/server/libjvm.so 加到环境变量就行了？不，亲自试验过了，没用，对比了一下正常启动的idea，发现libnet.so路径不对，正常要取jdk里的，于是又加入环境变量，这回启动两次居然直接crash了&lt;br&gt;最后，经过一系列折腾，搞出一个最佳解决办法，修改启动文件&lt;br&gt;$ sudo vim /opt/intellij-idea-ultimate-edition/bin/idea.sh&lt;br&gt;在开头加上&lt;br&gt;export LD_LIBRARY_PATH=/usr/lib/jvm/java-11.0.7-jetbrains/lib:$LD_LIBRARY_PATH &amp;amp;&amp;amp; export IDEA_JDK=/usr/lib/jvm/java-11.0.7-jetbrain&lt;br&gt;这回终于能启动成功了，编译好的jdk最好保存一下，别再这么折腾了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际操作 ( px 是透明代理 )：  &lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;px git clone https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;JetBrains&amp;#x2F;JetBrainsRuntime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd JetBrainsRuntime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;px wget https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;prehonor&amp;#x2F;myJetBrainsRuntime&amp;#x2F;master&amp;#x2F;idea.patch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git apply .&amp;#x2F;idea.patch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh .&amp;#x2F;configure --disable-warnings-as-errors&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make images #其实这一步内存足够就不会出问题，不一定需要开swap什么的 编译使用的是liberica-11-openjdk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo mv .&amp;#x2F;build&amp;#x2F;linux-&amp;lt;tab&amp;gt;&amp;#x2F;images&amp;#x2F;jdk &amp;#x2F;usr&amp;#x2F;lib&amp;#x2F;jvm&amp;#x2F;jetbrains-11-openjdk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后打开 IDEA，安装 &lt;code&gt;Choose Runtime&lt;/code&gt; 插件&lt;br&gt;添加自定义jdk，使用你刚编译的jetbrains runtime启动即可。（笔者机器上无报错）&lt;br&gt;此处提供版本 &lt;code&gt;jb11_0_11-b1504.12&lt;/code&gt; 的构建修改版（x86_64）: &lt;a href=&#34;https://ipfs.io/ipfs/QmRMkFu4UKCP4bFfXaMFurRt6f3aWJuWqZj97z1LbC92Ri?filename=jbjdk.7z&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nstd.sfclub.cc/2021/03/13/%E4%BD%BF%E7%94%A8-cproxy-%E5%AF%B9%E7%A8%8B%E5%BA%8F%E8%BF%9B%E8%A1%8C%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</guid>
            <title>使用 cproxy 对程序进行透明代理</title>
            <link>https://nstd.sfclub.cc/2021/03/13/%E4%BD%BF%E7%94%A8-cproxy-%E5%AF%B9%E7%A8%8B%E5%BA%8F%E8%BF%9B%E8%A1%8C%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</link>
            <category>tech,linux</category>
            <pubDate>Sat, 13 Mar 2021 22:57:30 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在 Windows 下，说到 &lt;code&gt;透明代理&lt;/code&gt; ，你可能会想到 &lt;code&gt;Proxifier&lt;/code&gt; , &lt;code&gt;SSTap&lt;/code&gt;, &lt;code&gt;Mellow&lt;/code&gt;&lt;br&gt;但在 Linux 下，你可能会想到 &lt;code&gt;proxychains&lt;/code&gt; 然后再想到 &lt;code&gt;proxychains&lt;/code&gt; 不能代理 static-linked 的程序。  &lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h1 id=&#34;为什么-ProxyChains-NG-不能代理静态连接的程序&#34;&gt;&lt;a href=&#34;#为什么-ProxyChains-NG-不能代理静态连接的程序&#34; class=&#34;headerlink&#34; title=&#34;为什么 ProxyChains(NG) 不能代理静态连接的程序&#34;&gt;&lt;/a&gt;为什么 ProxyChains(NG) 不能代理静态连接的程序&lt;/h1&gt;&lt;p&gt;ProxyChains NG 通过一个预加载的共享库来hook到网络相关的函数(比如: connect,getaddrinfo)上，接着他就可以转发这些流量。&lt;br&gt;缺点似乎显而易见，如果只是通过 &lt;a href=&#34;https://stackoverflow.com/questions/426230/what-is-the-ld-preload-trick&#34;&gt;LD_PRELOAD&lt;/a&gt; 来进行透明代理，那么这招对于静态连接的程序是无用的（比如说 Go 程序..)&lt;br&gt;其次，ProxyChains 只支持 TCP，这可能导致无法转发 DNS 流量 -&amp;gt; DNS 流量泄漏。  &lt;/p&gt;
&lt;h1 id=&#34;cproxy-是什么&#34;&gt;&lt;a href=&#34;#cproxy-是什么&#34; class=&#34;headerlink&#34; title=&#34;cproxy 是什么&#34;&gt;&lt;/a&gt;cproxy 是什么&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/NOBLES5E/cproxy&#34;&gt;cproxy&lt;/a&gt; 也是透明代理，作用和 proxychains 类似。&lt;br&gt;原理上与 proxychains 不同，它使用 &lt;code&gt;cgroup&lt;/code&gt; 进行对程序的代理 &lt;del&gt;，不过配置起来还有点麻烦&lt;/del&gt;&lt;br&gt;本文将会教您在您的Linux PC上使用 cproxy，截至本文发布之前，cproxy似乎只支持 Linux。  &lt;/p&gt;
&lt;h2 id=&#34;下载-cproxy&#34;&gt;&lt;a href=&#34;#下载-cproxy&#34; class=&#34;headerlink&#34; title=&#34;下载 cproxy&#34;&gt;&lt;/a&gt;下载 cproxy&lt;/h2&gt;&lt;p&gt;官方推荐的方法是: 直接用 &lt;code&gt;cargo&lt;/code&gt;    &lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cargo install cproxy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果没有 cargo 可以在 &lt;a href=&#34;https://github.com/NOBLES5E/cproxy/releases&#34;&gt;Release&lt;/a&gt; 上下载压缩包。&lt;br&gt;解压压缩包，可能会发现有两个可执行文件，不过似乎只留一个就好了。  &lt;/p&gt;
&lt;h2 id=&#34;安装-cproxy&#34;&gt;&lt;a href=&#34;#安装-cproxy&#34; class=&#34;headerlink&#34; title=&#34;安装 cproxy&#34;&gt;&lt;/a&gt;安装 cproxy&lt;/h2&gt;&lt;p&gt;先来试一试 cproxy！  &lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cproxy --port &amp;lt;本地代理端口&amp;gt; -- curl ip.sb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;( ｀д′) 失败了&lt;br&gt;如果你和我一样，在port上写了 socks5 的代理端口，那么你就被坑了。&lt;br&gt;笔者填入 geph 的 HTTP 代理端口时是可以成功的，但是使用 v2ray 的s5/http端口都无法使用。&lt;br&gt;这是因为 cproxy 需要&lt;a href=&#34;https://github.com/NOBLES5E/cproxy/wiki/Example-setup-with-V2Ray&#34;&gt;修改 v2ray 的配置&lt;/a&gt;进行兼容，&lt;a href=&#34;https://github.com/zfl9/ipt2socks&#34;&gt;如果你不想去改配置&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;在确保可以使用 cproxy 后，我们来配置 &lt;code&gt;alias&lt;/code&gt;。&lt;br&gt;将以下内容写到 &lt;code&gt;~/.bashrc&lt;/code&gt;，记得自己修改一些部分。  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;alias &amp;quot;px&amp;quot;=&amp;quot;/path/to/cproxy --port &amp;lt;your-local-proxy-port&amp;gt; --&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;例如我的配置：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;alias &amp;quot;px&amp;quot;=&amp;quot;/bin/cproxy --port 60080 --use-tproxy -- &amp;quot; # 60080 是ipt2socks的默认监听端口。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后，使用 &lt;code&gt;source ~/.bashrc&lt;/code&gt; 载入，试试 &lt;code&gt;px curl ip.sb&lt;/code&gt;，看看是否成功。  &lt;/p&gt;
&lt;h2 id=&#34;缺陷&#34;&gt;&lt;a href=&#34;#缺陷&#34; class=&#34;headerlink&#34; title=&#34;缺陷&#34;&gt;&lt;/a&gt;缺陷&lt;/h2&gt;&lt;p&gt;每次使用都要 sudo ，还是挺烦人的吧…&lt;br&gt;对于这种情况，也可以考虑使用有后台常驻的 &lt;a href=&#34;https://github.com/springzfx/cgproxy&#34;&gt;cgproxy&lt;/a&gt;，但本文不做介绍，有兴趣可以自己了解。  &lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nstd.sfclub.cc/2021/03/12/hello-world/</guid>
            <title>Hello World</title>
            <link>https://nstd.sfclub.cc/2021/03/12/hello-world/</link>
            <pubDate>Fri, 12 Mar 2021 22:43:58 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;你好, Hexo！&lt;br&gt;折腾了一个晚上，我终于还是回到 Hexo 的怀抱了。&lt;br&gt;接下来会陆陆续续更新一些杂文，并且把我在 Lxnet 发布的那几篇文章搬一下，欢迎 &lt;a href=&#34;https://github.com/iceBear67/blog&#34;&gt;Watch/订阅&lt;/a&gt; 我的博客。  &lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
